{\rtf1\ansi\ansicpg1252\cocoartf2761
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\froman\fcharset0 Times-Roman;\f2\fmodern\fcharset0 Courier;
\f3\fnil\fcharset0 HelveticaNeue;\f4\froman\fcharset0 Times-Bold;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red0\green0\blue0;\red179\green179\blue179;
\red109\green109\blue109;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;\cssrgb\c0\c0\c0\c84706;\cssrgb\c75294\c75294\c75294;
\cssrgb\c50196\c50196\c50196;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid201\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid3}
{\list\listtemplateid4\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid301\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid4}
{\list\listtemplateid5\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid401\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid5}
{\list\listtemplateid6\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid501\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid6}
{\list\listtemplateid7\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid601\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid7}
{\list\listtemplateid8\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid701\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid8}
{\list\listtemplateid9\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid801\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid9}
{\list\listtemplateid10\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid901\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid10}
{\list\listtemplateid11\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid1001\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid1002\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid11}
{\list\listtemplateid12\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid12}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}{\listoverride\listid4\listoverridecount0\ls4}{\listoverride\listid5\listoverridecount0\ls5}{\listoverride\listid6\listoverridecount0\ls6}{\listoverride\listid7\listoverridecount0\ls7}{\listoverride\listid8\listoverridecount0\ls8}{\listoverride\listid9\listoverridecount0\ls9}{\listoverride\listid10\listoverridecount0\ls10}{\listoverride\listid11\listoverridecount0\ls11}{\listoverride\listid12\listoverridecount0\ls12}}
\paperw11900\paperh16840\margl1440\margr1440\vieww28600\viewh18000\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \
Array\
\
Array is a kind of data structure which is simple and widely used data structure that stores elements of same type. They come in various types based on structure, storage\
And usages.\
\
Various types of data structures are: -\
1. One-dimensional Array(1D Array)\
	A simple list of elements stored in contiguous memory location.\
2. Multi-dimensional Array\
	a. Two-dimensional array (2D array)\
		Array consisting multiple rows and columns.\
\pard\pardeftab720\partightenfactor0

\f1 \cf0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 		arr = [ [1, 2, 3], [4, 5, 6], [7, 8, 9] ]\
	b.Three-dimensional array (3D array)\
		arr = [ \
			[[1, 2], [3, 4]], \
			[[5, 6], [7, 8]] \
			]\

\f0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 	c. Jagged Array\
		An array of array where there each array has different lengths.\
		arr = [[1,1,2,4],[3,5], [7,40,22,11]	\
	d. Dynamic array\
		The array where the length grow or shrink dynamically (python list, java array, c++ vector]\
		arr = []\
		arr.append()\
		arr.append(2)\
	e. Sparse Array\
		Stores only non-zero element with their indices to save memory.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0
\f1 \cf0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Stores only non-zero elements with their indices to save memory.\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Used in cases where most elements are zeros.\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Example:
\f2\fs26 ini\uc0\u8232 
\f3\fs22 \cf3 \cb4 \strokec3 CopyEdit
\f2\fs26 \cf0 \cb1 \strokec2 \uc0\u8232 \u8232 \u8232 [(0,2,5), (3,4,7), (5,1,9)]  # (row, col, value)\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 \u8232 
\f1\fs24 \
\pard\pardeftab720\sa280\partightenfactor0

\f4\b\fs28 \cf0 \strokec2 6. Associative Array (Dictionary)\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls2\ilvl0
\f1\b0\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Key-value pair storage (common in Python dictionaries, JavaScript objects).\
\ls2\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Example:
\f2\fs26 ini\uc0\u8232 
\f3\fs22 \cf3 \cb4 \strokec3 CopyEdit
\f2\fs26 \cf0 \cb1 \strokec2 \uc0\u8232 \u8232 \u8232 arr = \{"name": "Alice", "age": 25\}\
\ls2\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 \u8232 
\f1\fs24 \
\pard\pardeftab720\sa280\partightenfactor0

\f4\b\fs28 \cf0 \strokec2 7. Bit Array (BitSet)\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls3\ilvl0
\f1\b0\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Stores bits instead of full integers to save memory.\
\ls3\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Example: 
\f2\fs26 1010101
\f1\fs24 \
\pard\pardeftab720\sa280\partightenfactor0

\f4\b\fs28 \cf0 \strokec2 8. Circular Array (Ring Buffer)\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls4\ilvl0
\f1\b0\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Used in queue implementations where the end connects to the beginning.\
\ls4\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Example: 
\f2\fs26 [4, 5, 6]
\f1\fs24  wraps around to 
\f2\fs26 [6, 4, 5]
\f1\fs24 .\
\pard\pardeftab720\sa280\partightenfactor0

\f4\b\fs28 \cf0 \strokec2 9. Boolean Array\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls5\ilvl0
\f1\b0\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Contains only 
\f2\fs26 True
\f1\fs24  or 
\f2\fs26 False
\f1\fs24  values.\
\ls5\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Example: 
\f2\fs26 [True, False, True, False]
\f1\fs24 \
\pard\pardeftab720\sa280\partightenfactor0

\f4\b\fs28 \cf0 \strokec2 10. Parallel Arrays\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls6\ilvl0
\f1\b0\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Multiple arrays used together where elements at the same index relate.\
\ls6\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Example:
\f2\fs26 ini\uc0\u8232 
\f3\fs22 \cf3 \cb4 \strokec3 CopyEdit
\f2\fs26 \cf0 \cb1 \strokec2 \uc0\u8232 \u8232 \u8232 names = ["Alice", "Bob", "Charlie"]\
\ls6\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 ages = [25, 30, 22]\
\ls6\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 \u8232 
\f1\fs24 \
\pard\pardeftab720\sa280\partightenfactor0

\f4\b\fs28 \cf0 \strokec2 11. Fixed-Size vs. Variable-Size Arrays\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls7\ilvl0
\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Fixed-size:
\f1\b0  Declared with a set size and cannot grow (
\f2\fs26 int arr[10]
\f1\fs24  in C++).\
\ls7\ilvl0
\f4\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Variable-size:
\f1\b0  Can expand dynamically (
\f2\fs26 List<int> arr = new List<int>()
\f1\fs24  in C#).\
\pard\pardeftab720\sa280\partightenfactor0

\f4\b\fs28 \cf0 \strokec2 12. Heap-Allocated vs. Stack-Allocated Arrays\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls8\ilvl0
\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Stack-allocated:
\f1\b0  Fixed size and stored in stack memory (fast access).\
\ls8\ilvl0
\f4\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Heap-allocated:
\f1\b0  Dynamically allocated and stored in heap memory (slower but flexible).\
\pard\pardeftab720\sa280\partightenfactor0

\f4\b\fs28 \cf0 \strokec2 13. Matrix (Special 2D Array)\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls9\ilvl0
\f1\b0\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Used in mathematical and scientific computing.\
\ls9\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Example:
\f2\fs26 lua\uc0\u8232 
\f3\fs22 \cf3 \cb4 \strokec3 CopyEdit
\f2\fs26 \cf0 \cb1 \strokec2 \uc0\u8232 \u8232 \u8232 [[1, 2], \
\ls9\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2  [3, 4]]\
\ls9\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 \u8232 
\f1\fs24 \
\pard\pardeftab720\sa280\partightenfactor0

\f4\b\fs28 \cf0 \strokec2 14. Padded Arrays\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls10\ilvl0
\f1\b0\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Extra unused space is added for performance optimization.\
\pard\pardeftab720\partightenfactor0

\f0 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
\
Key operations that are done in this data structure\
\
1.  Accessing \
	O(1)  time complexity using index\
2. Searching \
	2.1. Linear search or sequential search. O(1)\
		
\f1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Checks each element in the data structure one by one until the target element is found.\
	Time complexity:\
		worst case: o(n) when there is no element which we are searching for or is at the last position.\
		Best case: o(1) when the element we are searching is at the first position.\
	Use case:\
		When we are searching for unsorted data or small size data.\
		works on both sorted or unsorted data.\
	2.2 Interval search( Efficient search)\
	This search includes various types of search like.\
		Binary Search\
		Ternary search \
		Jump search\
		Interpolation\
		Exponential search\
	2.3. Specialised searching techniques\
		
\f4\b \strokec2 Fibonacci Search
\f1\b0 \strokec2 : Similar to binary search but uses Fibonacci numbers for searching.\
\pard\pardeftab720\partightenfactor0

\f4\b \cf0 \strokec2 		Hashing (Hash Table Lookup)
\f1\b0 : Uses 
\f4\b O(1) average time complexity
\f1\b0  for searching.\

\f4\b 		Depth-First Search (DFS) & Breadth-First Search (BFS)
\f1\b0 : Used in 
\f4\b graph and tree searching
\f1\b0 .\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \strokec2 \
\
\
\
\pard\pardeftab720\partightenfactor0
\cf0 \strokec2 \
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 Arrays and Strings are fundamental data structures in 
\f4\b Data Structures and Algorithms (DSA)
\f1\b0 . Let's go over the key concepts, operations, and problems related to each.\
\pard\pardeftab720\partightenfactor0
\cf5 \strokec5 \
\pard\pardeftab720\sa298\partightenfactor0

\f4\b\fs36 \cf0 \strokec2 1. Arrays\
\pard\pardeftab720\sa240\partightenfactor0

\f1\b0\fs24 \cf0 An 
\f4\b array
\f1\b0  is a fixed-size, contiguous data structure that stores elements of the same type.\
\pard\pardeftab720\sa280\partightenfactor0

\f4\b\fs28 \cf0 \strokec2 Key Operations\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls11\ilvl0
\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	1	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Accessing Elements
\f1\b0  \'96 O(1) time complexity using index.\
\ls11\ilvl0
\f4\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	2	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Searching
\f1\b0 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls11\ilvl1\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Linear Search \'96 O(n)\
\ls11\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Binary Search (sorted array) \'96 O(log n)\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls11\ilvl0
\f4\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	3	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Insertion
\f1\b0  \'96 O(n) in the worst case (shifting elements).\
\ls11\ilvl0
\f4\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	4	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Deletion
\f1\b0  \'96 O(n) in the worst case (shifting elements).\
\ls11\ilvl0
\f4\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	5	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Sorting Algorithms
\f1\b0 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls11\ilvl1\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 QuickSort \'96 O(n log n)\
\ls11\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 MergeSort \'96 O(n log n)\
\ls11\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Bubble Sort, Selection Sort, Insertion Sort \'96 O(n\'b2)\
\pard\pardeftab720\sa280\partightenfactor0

\f4\b\fs28 \cf0 \strokec2 Common Array Problems\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls12\ilvl0
\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Kadane\'92s Algorithm
\f1\b0  (Maximum Subarray Sum) \'96 O(n)\
\ls12\ilvl0
\f4\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Two Sum
\f1\b0  (using HashMap or Two Pointer)\
\ls12\ilvl0
\f4\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Dutch National Flag Algorithm
\f1\b0  (Sort 0s, 1s, and 2s)\
\ls12\ilvl0
\f4\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Rotate an Array
\f1\b0  (Cyclic Replacements)\
\ls12\ilvl0
\f4\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Find Missing Number
\f1\b0  (XOR or Sum Approach)\
\ls12\ilvl0
\f4\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Merge Intervals
\f1\b0 \
\ls12\ilvl0
\f4\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Subarray Sum Equals K
\f1\b0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \strokec2 \
\

\f0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
		}